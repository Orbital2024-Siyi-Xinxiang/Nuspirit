source 'https://cdn.cocoapods.org/'

platform :ios, '13.0'

# use_modular_headers!

target 'UnityFramework' do
  pod 'Firebase/Analytics', '10.25.0'
  pod 'Firebase/Auth', '10.25.0'
  pod 'Firebase/Core', '10.25.0'
  pod 'Firebase/Firestore', '10.25.0'
  pod 'Firebase/Messaging', '10.25.0'
  pod 'Firebase/RemoteConfig', '10.25.0'
  pod 'Firebase/Storage', '10.25.0'
end
target 'Unity-iPhone' do
end

target 'OrbitalApp' do
  pod 'Firebase/Messaging', '10.25.0'
  pod 'Firebase/InAppMessaging', '10.25.0'
end

use_frameworks! :linkage => :static

post_install do |installer|
  applicationTargets = [
      'OrbitalApp',
  ]
  libraryTargets = [
      'UnityFramework',
  ]
 
 
  embedded_targets = installer.aggregate_targets.select { |aggregate_target|
      libraryTargets.include? aggregate_target.name
  }
  embedded_pod_targets = embedded_targets.flat_map { |embedded_target| embedded_target.pod_targets }
  host_targets = installer.aggregate_targets.select { |aggregate_target|
      applicationTargets.include? aggregate_target.name
  }
 
 
   # We only want to remove pods from Application targets, not libraries
  host_targets.each do |host_target|
      host_target.xcconfigs.each do |config_name, config_file|
          host_target.pod_targets.each do |pod_target|
              if embedded_pod_targets.include? pod_target
                  pod_target.specs.each do |spec|
                      if spec.attributes_hash['ios'] != nil
                          frameworkPaths = spec.attributes_hash['ios']['vendored_frameworks']
                          else
                          frameworkPaths = spec.attributes_hash['vendored_frameworks']
                      end
                      if frameworkPaths != nil
                          frameworkNames = Array(frameworkPaths).map(&:to_s).map do |filename|
                              extension = File.extname filename
                              File.basename filename, extension
                          end
                          frameworkNames.each do |name|
                              puts "Removing #{name} from OTHER_LDFLAGS of target #{host_target.name}"
                              config_file.frameworks.delete(name)
                          end
                      end
                  end
              end
          end
          xcconfig_path = host_target.xcconfig_path(config_name)
          config_file.save_as(xcconfig_path)
      end
  end
 
 
  # remove_duplicated_frameworks('OrbitalApp', installer)
 end
 